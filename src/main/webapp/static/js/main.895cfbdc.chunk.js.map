{"version":3,"sources":["utils.js","components/Login.js","components/Register.js","components/Favorites.js","components/CustomSearch.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["SERVER_ORIGIN","loginUrl","login","credential","fetch","method","headers","credentials","body","JSON","stringify","then","response","status","Error","json","registerUrl","register","data","logoutUrl","logout","topGamesUrl","getGameDetailsUrl","searchGameByIdUrl","searchGameById","gameId","searchGameByName","gameName","getGameDetails","id","favoriteItemUrl","getFavoriteItem","getRecommendedItemsUrl","getRecommendations","Login","state","displayModal","onFinish","values","console","log","res","setState","props","onSuccess","message","success","name","catch","err","error","signinOnClick","handleCancel","this","shape","onClick","style","marginRight","title","visible","onCancel","footer","destoryOnClose","preserve","Item","rules","required","prefix","UserOutlined","className","placeholder","LockOutlined","type","htmlType","Component","Register","signupOnClick","SubMenu","Menu","MenuKey","Favorites","displayDrawer","onDrawerClose","onFavoriteClick","VIDEO","STREAM","CLIP","icon","StarFilled","placement","width","onClose","mode","defaultOpenKeys","height","borderRight","selectable","EyeOutlined","map","item","href","url","target","rel","broadcaster_name","YoutubeOutlined","VideoCameraOutlined","CustomSearch","searchOnClick","onSubmit","game_name","SearchOutlined","marginLeft","marginTop","TabPane","Tabs","tabKeys","renderCardTitle","loggedIn","favs","favOnChange","isFav","find","fav","StarOutlined","favItem","favorite","addFavoriteItem","overflow","textOverflow","renderCardGrid","grid","xs","sm","md","lg","xl","dataSource","renderItem","alt","src","thumbnail_url","replace","Home","resources","favoriteItems","favoriteOnChange","favVideos","favStreams","favClips","defaultActiveKey","tab","forceRender","Header","Layout","Content","Sider","App","topGames","signinOnSuccess","signoutOnClick","customSearchOnSuccess","onGameSelect","key","justify","display","onSelect","LikeOutlined","FireOutlined","game","box_art_url","borderRadius","padding","margin","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.895cfbdc.chunk.js","sourcesContent":["// If you don't want to host your server code and client code together, you can\r\n// pay AWS to host your server with HTTPS then config the api url endpoints like below\r\n// const SERVER_ORIGIN = '<Your server's url>';\r\nconst SERVER_ORIGIN = '';\r\n\r\nconst loginUrl = `${SERVER_ORIGIN}/login`;\r\n\r\nexport const login = (credential) => {\r\n    return fetch(loginUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(credential)\r\n    }).then((response) => {\r\n        if (response.status !== 200) {\r\n            throw Error('Fail to log in');\r\n        }\r\n\r\n        return response.json();\r\n    })\r\n}\r\n\r\nconst registerUrl = `${SERVER_ORIGIN}/register`;\r\n\r\nexport const register = (data) => {\r\n    return fetch(registerUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data)\r\n    }).then((response) => {\r\n        if (response.status !== 200) {\r\n            throw Error('Fail to register');\r\n        }\r\n    })\r\n}\r\n\r\nconst logoutUrl = `${SERVER_ORIGIN}/logout`;\r\n\r\nexport const logout = () => {\r\n    return fetch(logoutUrl, {\r\n        method: 'POST',\r\n        credentials: 'include',\r\n    }).then((response) => {\r\n        if (response.status !== 200) {\r\n            throw Error('Fail to log out');\r\n        }\r\n    })\r\n}\r\n\r\nconst topGamesUrl = `${SERVER_ORIGIN}/game`;\r\n\r\nexport const getTopGames = () => {\r\n    return fetch(topGamesUrl).then((response) => {\r\n        if (response.status !== 200) {\r\n            throw Error('Fail to get top games');\r\n        }\r\n\r\n        return response.json();\r\n    })\r\n}\r\n\r\nconst getGameDetailsUrl = `${SERVER_ORIGIN}/game?game_name=`;\r\n\r\nconst getGameDetails = (gameName) => {\r\n    return fetch(`${getGameDetailsUrl}${gameName}`).then((response) => {\r\n        if (response.status !== 200) {\r\n            throw Error('Fail to find the game');\r\n        }\r\n\r\n        return response.json();\r\n    });\r\n}\r\n\r\nconst searchGameByIdUrl = `${SERVER_ORIGIN}/search?game_id=`;\r\n\r\nexport const searchGameById = (gameId) => {\r\n    return fetch(`${searchGameByIdUrl}${gameId}`).then((response) => {\r\n        if (response.status !== 200) {\r\n            throw Error('Fail to find the game');\r\n        }\r\n        return response.json();\r\n    })\r\n}\r\n\r\nexport const searchGameByName = (gameName) => {\r\n    return getGameDetails(gameName).then((data) => {\r\n        if (data && data.id) {\r\n            return searchGameById(data.id);\r\n        }\r\n\r\n        throw Error('Fail to find the game')\r\n    })\r\n}\r\n\r\nconst favoriteItemUrl = `${SERVER_ORIGIN}/favorite`;\r\n\r\nexport const addFavoriteItem = (favItem) => {\r\n    return fetch(favoriteItemUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ favorite: favItem })\r\n    }).then((response) => {\r\n        if (response.status !== 200) {\r\n            throw Error('Fail to add favorite item');\r\n        }\r\n    })\r\n}\r\n\r\nexport const deleteFavoriteItem = (favItem) => {\r\n    return fetch(favoriteItemUrl, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ favorite: favItem })\r\n    }).then((response) => {\r\n        if (response.status !== 200) {\r\n            throw Error('Fail to delete favorite item');\r\n        }\r\n    })\r\n}\r\n\r\nexport const getFavoriteItem = () => {\r\n    return fetch(favoriteItemUrl, {\r\n        credentials: 'include',\r\n    }).then((response) => {\r\n        if (response.status !== 200) {\r\n            throw Error('Fail to get favorite item');\r\n        }\r\n\r\n        return response.json();\r\n    })\r\n}\r\n\r\nconst getRecommendedItemsUrl = `${SERVER_ORIGIN}/recommendation`;\r\n\r\nexport const getRecommendations = () => {\r\n    return fetch(getRecommendedItemsUrl, {\r\n        credentials: 'include',\r\n    }).then((response) => {\r\n        if (response.status !== 200) {\r\n            throw Error('Fail to get recommended item');\r\n        }\r\n\r\n        return response.json();\r\n    })\r\n}\r\n","import React, {Component} from 'react';\r\nimport { Modal, Button, Form, Input, message } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { login } from '../utils';\r\n\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        displayModal: false\r\n    }\r\n    render() {\r\n        const { displayModal } = this.state;\r\n        return (\r\n            <div>\r\n                <Button shape=\"round\"\r\n                        onClick={this.signinOnClick}\r\n                        style={{ marginRight: 20 }}\r\n                >\r\n                    Login\r\n                </Button>\r\n                <Modal title=\"Log In\"\r\n                       visible={displayModal}\r\n                       onCancel={this.handleCancel}\r\n                       footer={null}\r\n                       destoryOnClose={true}\r\n                >\r\n                    <Form\r\n                        name=\"normal_login\"\r\n                        onFinish={this.onFinish}\r\n                        preserve={false}\r\n                    >\r\n                        <Form.Item\r\n                            name=\"user_id\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please input your Username!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please input your Password!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input\r\n                                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                            />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                Log in\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onFinish = (values) => {\r\n        // step1: collect username/password from the form\r\n        // step2: send data to the server\r\n        console.log('Received values of form: ', values);\r\n        login(values)\r\n            .then( res => {\r\n                console.log(res);\r\n                // close the modal\r\n                this.setState({displayModal: false})\r\n                // inform App.js( login status )\r\n                this.props.onSuccess();\r\n                message.success(`Welcome, ${res.name}`)\r\n            })\r\n            .catch( err => {\r\n                message.error(err.message)\r\n            })\r\n\r\n    };\r\n\r\n    signinOnClick = () => {\r\n        // displayModal => true\r\n        console.log('sign in clicked');\r\n        this.setState({displayModal: true})\r\n    }\r\n\r\n    handleCancel = () => {\r\n        // displayModal => false\r\n        console.log('cancel clicked')\r\n        this.setState({displayModal: false})\r\n    }\r\n\r\n}\r\n\r\nexport default Login;","import React, {Component} from 'react';\r\nimport { Modal, Button, Form, Input, message } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport {register} from \"../utils\";\r\n\r\nclass Register extends Component {\r\n    state = {\r\n        displayModal: false\r\n    }\r\n    render() {\r\n        const { displayModal } = this.state;\r\n        return (\r\n            <div>\r\n                <Button shape=\"round\"\r\n                        type=\"primary\"\r\n                        onClick={this.signupOnClick}\r\n                        style={{ marginRight: 20 }}\r\n                >\r\n                    Register\r\n                </Button>\r\n                <Modal title=\"Register\"\r\n                       visible={displayModal}\r\n                       onCancel={this.handleCancel}\r\n                       footer={null}\r\n                       destoryOnClose={true}\r\n                >\r\n                    <Form\r\n                        name=\"normal_register\"\r\n                        onFinish={this.onFinish}\r\n                        preserve={false}\r\n                    >\r\n                        <Form.Item\r\n                            name=\"user_id\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please input your Username!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please input your Password!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input\r\n                                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"first_name\"\r\n                            rules={[{ required: true, message: 'Please input your Firstname!' }]}\r\n                        >\r\n                            <Input\r\n                                placeholder=\"firstname\"\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"last_name\"\r\n                            rules={[{ required: true, message: 'Please input your Lastname!' }]}\r\n                        >\r\n                            <Input\r\n                                placeholder=\"lastname\"\r\n                            />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                Register\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    signupOnClick = () => {\r\n        // displayModal => true\r\n        console.log('sign in clicked');\r\n        this.setState({displayModal: true})\r\n    }\r\n\r\n    handleCancel = () => {\r\n        // displayModal => false\r\n        console.log('cancel clicked')\r\n        this.setState({displayModal: false})\r\n    }\r\n\r\n    onFinish = (values) => {\r\n        // step1: collect username/password/firstname/lastname from the form\r\n        // step2: send data to the server\r\n        console.log('Received values of form: ', values);\r\n        register(values)\r\n            .then( res => {\r\n                //console.log(res);\r\n                // close the modal\r\n                this.setState({displayModal: false})\r\n                message.success('Register successfully')\r\n            })\r\n            .catch( err => {\r\n                message.error(err.message)\r\n            })\r\n\r\n    };\r\n}\r\n\r\nexport default Register;\r\n","import React, {Component} from 'react';\r\nimport { Menu, Button, Drawer } from 'antd';\r\nimport { EyeOutlined, YoutubeOutlined, VideoCameraOutlined, StarFilled } from '@ant-design/icons';\r\n\r\nconst { SubMenu } = Menu;\r\nconst MenuKey = {\r\n    Streams: 'streams',\r\n    Videos: 'videos',\r\n    Clips: 'clips'\r\n}\r\n\r\nclass Favorites extends Component {\r\n    state = {\r\n        displayDrawer: false,\r\n        // data: {\r\n        //     VIDEO: [],\r\n        //     STREAM: [],\r\n        //     CLIP: [],\r\n        // }\r\n    }\r\n\r\n    onDrawerClose = () => {\r\n        this.setState({\r\n            displayDrawer: false,\r\n        })\r\n    }\r\n\r\n    onFavoriteClick = () => {\r\n        // step1: get favorite items\r\n        // step2: set displayDrawer to be true\r\n        // getFavoriteItem()\r\n        //     .then((data) => {\r\n        //         this.setState({\r\n        //             data,\r\n        //             displayDrawer: true,\r\n        //         })\r\n        //     })\r\n        //     .catch((err) => {\r\n        //         message.error(err.message);\r\n        //     })\r\n        this.setState({\r\n            displayDrawer: true,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { VIDEO, STREAM, CLIP } = this.props.data;\r\n\r\n        return (\r\n            <div>\r\n                <Button type=\"primary\" shape=\"round\" onClick={this.onFavoriteClick} icon={<StarFilled />}>\r\n                    My Favorites</Button>\r\n                <Drawer\r\n                    title=\"My Favorites\"\r\n                    placement=\"right\"\r\n                    width={720}\r\n                    visible={this.state.displayDrawer}\r\n                    onClose={this.onDrawerClose}\r\n                >\r\n                    <Menu\r\n                        mode=\"inline\"\r\n                        defaultOpenKeys={[MenuKey.Streams]}\r\n                        style={{ height: '100%', borderRight: 0 }}\r\n                        selectable={false}\r\n                    >\r\n                        <SubMenu key={MenuKey.Streams} icon={<EyeOutlined />} title=\"Streams\">\r\n                            {\r\n                                STREAM.map((item) => {\r\n                                    return (\r\n                                        <Menu.Item key={item.id}>\r\n                                            <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                {`${item.broadcaster_name} - ${item.title}`}\r\n                                            </a>\r\n                                        </Menu.Item>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </SubMenu>\r\n                        <SubMenu key={MenuKey.Videos} icon={<YoutubeOutlined />} title=\"Videos\">\r\n                            {\r\n                                VIDEO.map((item) => {\r\n                                    return (\r\n                                        <Menu.Item key={item.id}>\r\n                                            <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                {`${item.broadcaster_name} - ${item.title}`}\r\n                                            </a>\r\n                                        </Menu.Item>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </SubMenu>\r\n                        <SubMenu key={MenuKey.Clips} icon={<VideoCameraOutlined />} title=\"Clips\">\r\n                            {\r\n                                CLIP.map((item) => {\r\n                                    return (\r\n                                        <Menu.Item key={item.id}>\r\n                                            <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                {`${item.broadcaster_name} - ${item.title}`}\r\n                                            </a>\r\n                                        </Menu.Item>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </SubMenu>\r\n                    </Menu>\r\n                </Drawer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Favorites;","import React, {Component} from 'react';\r\nimport { Button, Form, Input, message, Modal } from 'antd';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport { searchGameByName } from '../utils';\r\n\r\nclass CustomSearch extends Component {\r\n    state = {\r\n        displayModal: false\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            displayModal: false,\r\n        })\r\n    }\r\n\r\n    searchOnClick = () => {\r\n        this.setState({\r\n            displayModal: true,\r\n        })\r\n    }\r\n\r\n    onSubmit = (data) => {\r\n        // step 1: get search keyword\r\n        // step 2: do search on the server\r\n        searchGameByName(data.game_name)\r\n            .then((data) => {\r\n                this.setState({\r\n                    displayModal: false,\r\n                })\r\n                this.props.onSuccess(data);\r\n            })\r\n            .catch((err) => {\r\n                message.error(err.message);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Button shape=\"round\" onClick={this.searchOnClick} icon={<SearchOutlined />} style={{ marginLeft: '20px', marginTop: '20px'}}>\r\n                    Custom Search</Button>\r\n                <Modal\r\n                    title=\"Custom Search\"\r\n                    visible={this.state.displayModal}\r\n                    onCancel={this.handleCancel}\r\n                    footer={null}\r\n                >\r\n                    <Form\r\n                        name=\"custom_search\"\r\n                        onFinish={this.onSubmit}\r\n                    >\r\n                        <Form.Item\r\n                            name=\"game_name\"\r\n                            rules={[{ required: true, message: 'Please enter a game name' }]}\r\n                        >\r\n                            <Input placeholder=\"Game name\" />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                Search</Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CustomSearch;\r\n","import React from 'react';\r\nimport { Button, Card, List, message, Tabs, Tooltip } from 'antd';\r\nimport { StarOutlined, StarFilled } from '@ant-design/icons';\r\nimport { addFavoriteItem, deleteFavoriteItem } from '../utils';\r\n\r\nconst { TabPane } = Tabs;\r\nconst tabKeys = {\r\n    Streams: 'stream',\r\n    Videos: 'videos',\r\n    Clips: 'clips',\r\n}\r\n\r\nconst processUrl = (url) => url\r\n    .replace('%{height}', '252')\r\n    .replace('%{width}', '480')\r\n    .replace('{height}', '252')\r\n    .replace('{width}', '480');\r\n\r\nconst renderCardTitle = (item, loggedIn, favs, favOnChange) => {\r\n    const title = `${item.broadcaster_name} - ${item.title}`;\r\n\r\n    const isFav = favs.find((fav) => fav.id === item.id);\r\n\r\n    const favOnClick = () => {\r\n        if (isFav) {\r\n            deleteFavoriteItem(item).then(() => {\r\n                favOnChange();\r\n            }).catch(err => {\r\n                message.error(err.message)\r\n            })\r\n\r\n            return;\r\n        }\r\n\r\n        addFavoriteItem(item).then(() => {\r\n            favOnChange();\r\n        }).catch(err => {\r\n            message.error(err.message)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                loggedIn &&\r\n                <Tooltip title={isFav ? \"Remove from favorite list\" : \"Add to favorite list\"}>\r\n                    <Button shape=\"circle\" icon={isFav ? <StarFilled /> : <StarOutlined />} onClick={favOnClick} />\r\n                </Tooltip>\r\n            }\r\n            <div style={{ overflow: 'hidden', textOverflow: 'ellipsis', width: 450 }}>\r\n                <Tooltip title={title}>\r\n                    <span>{title}</span>\r\n                </Tooltip>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst renderCardGrid = (data, loggedIn, favs, favOnChange) => {\r\n    return (\r\n        <List\r\n            grid={{\r\n                xs: 1,\r\n                sm: 2,\r\n                md: 4,\r\n                lg: 4,\r\n                xl: 6,\r\n            }}\r\n            dataSource={data}\r\n            renderItem={item => (\r\n                <List.Item style={{ marginRight: '20px' }}>\r\n                    <Card\r\n                        title={renderCardTitle(item, loggedIn, favs, favOnChange)}\r\n                    >\r\n                        <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <img\r\n                                alt=\"Placeholder\"\r\n                                src={processUrl(item.thumbnail_url)}\r\n                            />\r\n                        </a>\r\n                    </Card>\r\n                </List.Item>\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nconst Home = ({ resources, loggedIn, favoriteItems, favoriteOnChange }) => {\r\n    const { VIDEO, STREAM, CLIP } = resources;\r\n    const { VIDEO: favVideos, STREAM: favStreams, CLIP: favClips} = favoriteItems;\r\n\r\n    return (\r\n        <Tabs\r\n            defaultActiveKey={tabKeys.Streams}\r\n        >\r\n            <TabPane tab=\"Streams\" key={tabKeys.Streams} style={{ height: '680px', overflow: 'auto' }} forceRender={true}>\r\n                {renderCardGrid(STREAM, loggedIn, favStreams, favoriteOnChange)}\r\n            </TabPane>\r\n            <TabPane tab=\"Videos\" key={tabKeys.Videos} style={{ height: '680px', overflow: 'auto' }} forceRender={true}>\r\n                {renderCardGrid(VIDEO, loggedIn, favVideos, favoriteOnChange)}\r\n            </TabPane>\r\n            <TabPane tab=\"Clips\" key={tabKeys.Clips} style={{ height: '680px', overflow: 'auto' }} forceRender={true}>\r\n                {renderCardGrid(CLIP, loggedIn, favClips, favoriteOnChange)}\r\n            </TabPane>\r\n        </Tabs>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\nimport { Layout, Row, Col, Button, message, Menu } from 'antd';\nimport { LikeOutlined, FireOutlined } from '@ant-design/icons';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Favorites from './components/Favorites';\nimport CustomSearch from './components/CustomSearch';\nimport Home from './components/Home';\nimport { getRecommendations, getTopGames, logout, searchGameById, getFavoriteItem } from './utils';\n\n\nconst { Header, Content, Sider } = Layout;\nconst { SubMenu } = Menu;\n\nclass App extends React.Component {\n    state = {\n        loggedIn: false,\n        topGames: [],\n        resources: {\n            VIDEO: [],\n            STREAM: [],\n            CLIP: [],\n        },\n        favoriteItems: {\n            VIDEO: [],\n            STREAM: [],\n            CLIP: [],\n        },\n    }\n\n    componentDidMount()  {\n        // fetch pop games from the server\n        getTopGames()\n            .then((data) => {\n                // render top games\n                this.setState({\n                    topGames: data\n                })\n            })\n            .catch((err) => {\n                message.error(err.message);\n            })\n    }\n\n    render() {\n        const { loggedIn } = this.state;\n\n        return (\n            <Layout>\n                <Header>\n                    <Row justify=\"space-between\">\n                        <Col>\n                            {\n                                loggedIn && <Favorites data={this.state.favoriteItems} />\n                            }\n\n                        </Col>\n                        <Col>\n                            {\n                                // case1: user already logged in\n                                // case2: user hasn't logged in\n                                loggedIn\n                                    ?\n                                    <Button shape=\"round\" onClick={this.signoutOnClick}>\n                                        Logout</Button>\n                                    :\n                                    <div style={{ display: 'flex' }}>\n                                        <Login onSuccess={this.signinOnSuccess}/>\n                                        <Register />\n                                    </div>\n\n                            }\n                        </Col>\n                    </Row>\n\n                </Header>\n                <Layout>\n                    <Sider width={300} className=\"site-layout-background\">\n                        <CustomSearch onSuccess={this.customSearchOnSuccess} />\n                        <Menu\n                            mode=\"inline\"\n                            onSelect={this.onGameSelect}\n                            style={{ marginTop: '10px' }}\n                        >\n                            <Menu.Item icon={<LikeOutlined />} key=\"Recommendation\">\n                                Recommend for you!</Menu.Item>\n                            <SubMenu icon={<FireOutlined />} key=\"Popular Games\" title=\"Popular Games\" className=\"site-top-game-list\" >\n                                {\n                                    this.state.topGames.map((game) => {\n                                        return (\n                                            <Menu.Item key={game.id} style={{ height: '50px' }}>\n                                                <img\n                                                    alt=\"Placeholder\"\n                                                    src={game.box_art_url.replace('{height}', '40').replace('{width}', '40')}\n                                                    style={{ borderRadius: '50%', marginRight: '20px' }}\n                                                />\n                                                <span>\n                        {game.name}\n                      </span>\n                                            </Menu.Item>\n                                        )\n                                    })\n                                }\n                            </SubMenu>\n                        </Menu>\n\n                    </Sider>\n                    <Layout style={{padding: '24px'}}>\n                        <Content\n                            className=\"site-layout-background\"\n                            style={{\n                                padding: 24,\n                                margin: 0,\n                                height: 800,\n                                overflow: 'auto'\n                            }}\n                        >\n                            <Home\n                                resources={this.state.resources}\n                                loggedIn={this.state.loggedIn}\n                                favoriteItems={this.state.favoriteItems}\n                                favoriteOnChange={this.favoriteOnChange}\n                            />\n                        </Content>\n                    </Layout>\n                </Layout>\n            </Layout>\n        )\n    }\n\n    favoriteOnChange = () => {\n        getFavoriteItem().then((data) => {\n            this.setState({\n                favoriteItems: data,\n                loggedIn: true\n            })\n        }).catch((err) => {\n            message.error(err.message);\n        })\n    }\n\n    signinOnSuccess = () => {\n        getFavoriteItem().then((data) => {\n            this.setState({\n                favoriteItems: data,\n                loggedIn: true\n            })\n        }).catch((err) => {\n            message.error(err.message);\n        })\n    }\n\n    signoutOnClick = () => {\n        logout()\n            .then(() => {\n                this.setState({\n                    loggedIn: false\n                })\n                message.success(`Successfull signed out`);\n            }).catch((err) => {\n            message.error(err.message);\n        })\n    }\n\n    customSearchOnSuccess = (data) => {\n        this.setState({\n            resources: data,\n        })\n    }\n\n    onGameSelect = ({ key }) => {\n        if (key === 'Recommendation') {\n            getRecommendations().then((data) => {\n                this.setState({\n                    resources: data,\n                })\n            })\n\n            return;\n        }\n\n        searchGameById(key).then((data) => {\n            this.setState({\n                resources: data,\n            })\n        })\n    }\n}\n\nexport default App;\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}